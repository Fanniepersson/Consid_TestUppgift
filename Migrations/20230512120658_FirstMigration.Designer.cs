// <auto-generated />
using System;
using Consid_TestUppgift.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consid_TestUppgift.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230512120658_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Consid_TestUppgift.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 10000m,
                            ProductName = "Samsung Tv 50"
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 23000m,
                            ProductName = "Macbook Pro 13"
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 11000m,
                            ProductName = "Macbook Air 11"
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 13000m,
                            ProductName = "Macbook Air 13"
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 21000m,
                            ProductName = "Macbook Pro 11"
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 14000m,
                            ProductName = "LG 65"
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 9999m,
                            ProductName = "LG 50"
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 10500m,
                            ProductName = "Iphone 13"
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 9500m,
                            ProductName = "Iphone 12"
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.",
                            Price = 8500m,
                            ProductName = "Samsung Tv 40"
                        });
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.ProductSupplier", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityForSale")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSupplier");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SupplierId = 1,
                            QuantityForSale = 10
                        },
                        new
                        {
                            ProductId = 1,
                            SupplierId = 2,
                            QuantityForSale = 5
                        },
                        new
                        {
                            ProductId = 2,
                            SupplierId = 1,
                            QuantityForSale = 10
                        },
                        new
                        {
                            ProductId = 2,
                            SupplierId = 2,
                            QuantityForSale = 2
                        },
                        new
                        {
                            ProductId = 2,
                            SupplierId = 3,
                            QuantityForSale = 20
                        },
                        new
                        {
                            ProductId = 3,
                            SupplierId = 1,
                            QuantityForSale = 4
                        },
                        new
                        {
                            ProductId = 3,
                            SupplierId = 3,
                            QuantityForSale = 20
                        },
                        new
                        {
                            ProductId = 4,
                            SupplierId = 1,
                            QuantityForSale = 5
                        },
                        new
                        {
                            ProductId = 4,
                            SupplierId = 2,
                            QuantityForSale = 10
                        },
                        new
                        {
                            ProductId = 4,
                            SupplierId = 3,
                            QuantityForSale = 12
                        },
                        new
                        {
                            ProductId = 5,
                            SupplierId = 1,
                            QuantityForSale = 11
                        },
                        new
                        {
                            ProductId = 6,
                            SupplierId = 2,
                            QuantityForSale = 20
                        },
                        new
                        {
                            ProductId = 6,
                            SupplierId = 3,
                            QuantityForSale = 3
                        },
                        new
                        {
                            ProductId = 7,
                            SupplierId = 3,
                            QuantityForSale = 15
                        },
                        new
                        {
                            ProductId = 8,
                            SupplierId = 2,
                            QuantityForSale = 20
                        },
                        new
                        {
                            ProductId = 9,
                            SupplierId = 1,
                            QuantityForSale = 8
                        },
                        new
                        {
                            ProductId = 9,
                            SupplierId = 2,
                            QuantityForSale = 2
                        },
                        new
                        {
                            ProductId = 9,
                            SupplierId = 3,
                            QuantityForSale = 10
                        },
                        new
                        {
                            ProductId = 10,
                            SupplierId = 2,
                            QuantityForSale = 13
                        });
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.ProductWarehouse", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "WarehouseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ProductWarehouse");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            WarehouseId = 1,
                            QuantityInStock = 30
                        },
                        new
                        {
                            ProductId = 1,
                            WarehouseId = 2,
                            QuantityInStock = 100
                        },
                        new
                        {
                            ProductId = 1,
                            WarehouseId = 3,
                            QuantityInStock = 20
                        },
                        new
                        {
                            ProductId = 1,
                            WarehouseId = 4,
                            QuantityInStock = 2
                        },
                        new
                        {
                            ProductId = 2,
                            WarehouseId = 1,
                            QuantityInStock = 40
                        },
                        new
                        {
                            ProductId = 2,
                            WarehouseId = 4,
                            QuantityInStock = 120
                        },
                        new
                        {
                            ProductId = 3,
                            WarehouseId = 3,
                            QuantityInStock = 140
                        },
                        new
                        {
                            ProductId = 3,
                            WarehouseId = 2,
                            QuantityInStock = 30
                        },
                        new
                        {
                            ProductId = 4,
                            WarehouseId = 1,
                            QuantityInStock = 120
                        },
                        new
                        {
                            ProductId = 4,
                            WarehouseId = 2,
                            QuantityInStock = 50
                        },
                        new
                        {
                            ProductId = 4,
                            WarehouseId = 3,
                            QuantityInStock = 20
                        },
                        new
                        {
                            ProductId = 4,
                            WarehouseId = 4,
                            QuantityInStock = 110
                        },
                        new
                        {
                            ProductId = 5,
                            WarehouseId = 2,
                            QuantityInStock = 60
                        },
                        new
                        {
                            ProductId = 5,
                            WarehouseId = 3,
                            QuantityInStock = 20
                        },
                        new
                        {
                            ProductId = 5,
                            WarehouseId = 4,
                            QuantityInStock = 110
                        },
                        new
                        {
                            ProductId = 6,
                            WarehouseId = 1,
                            QuantityInStock = 180
                        },
                        new
                        {
                            ProductId = 6,
                            WarehouseId = 2,
                            QuantityInStock = 200
                        },
                        new
                        {
                            ProductId = 7,
                            WarehouseId = 2,
                            QuantityInStock = 130
                        },
                        new
                        {
                            ProductId = 7,
                            WarehouseId = 4,
                            QuantityInStock = 40
                        },
                        new
                        {
                            ProductId = 8,
                            WarehouseId = 1,
                            QuantityInStock = 30
                        },
                        new
                        {
                            ProductId = 8,
                            WarehouseId = 2,
                            QuantityInStock = 300
                        },
                        new
                        {
                            ProductId = 8,
                            WarehouseId = 3,
                            QuantityInStock = 100
                        },
                        new
                        {
                            ProductId = 8,
                            WarehouseId = 4,
                            QuantityInStock = 80
                        },
                        new
                        {
                            ProductId = 9,
                            WarehouseId = 1,
                            QuantityInStock = 110
                        },
                        new
                        {
                            ProductId = 9,
                            WarehouseId = 2,
                            QuantityInStock = 70
                        },
                        new
                        {
                            ProductId = 9,
                            WarehouseId = 3,
                            QuantityInStock = 350
                        },
                        new
                        {
                            ProductId = 9,
                            WarehouseId = 4,
                            QuantityInStock = 40
                        },
                        new
                        {
                            ProductId = 10,
                            WarehouseId = 3,
                            QuantityInStock = 40
                        },
                        new
                        {
                            ProductId = 10,
                            WarehouseId = 4,
                            QuantityInStock = 70
                        });
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            SupplierName = "Elgiganten"
                        },
                        new
                        {
                            SupplierId = 2,
                            SupplierName = "Mediamarket"
                        },
                        new
                        {
                            SupplierId = 3,
                            SupplierName = "NetOnNet"
                        });
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"));

                    b.Property<decimal>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            Capacity = 0m,
                            WarehouseName = "Lager Ängelholm"
                        },
                        new
                        {
                            WarehouseId = 2,
                            Capacity = 0m,
                            WarehouseName = "Lager Kristianstad"
                        },
                        new
                        {
                            WarehouseId = 3,
                            Capacity = 0m,
                            WarehouseName = "Lager Halmstad"
                        },
                        new
                        {
                            WarehouseId = 4,
                            Capacity = 0m,
                            WarehouseName = "Lager Kungsbacka"
                        });
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.ProductSupplier", b =>
                {
                    b.HasOne("Consid_TestUppgift.Models.Product", "Product")
                        .WithMany("Suppliers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consid_TestUppgift.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.ProductWarehouse", b =>
                {
                    b.HasOne("Consid_TestUppgift.Models.Product", "Product")
                        .WithMany("Warehouses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consid_TestUppgift.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.Product", b =>
                {
                    b.Navigation("Suppliers");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Consid_TestUppgift.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
